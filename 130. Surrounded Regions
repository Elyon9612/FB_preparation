class Solution {
public:
    int row[4] = {0,0,1,-1};
    int col[4] = {1,-1,0,0};
    void solve(vector<vector<char>>& board) {
        queue<pair<int,int>> q;
        for(int i=0;i<board.size();i++){
            if(i == 0 || i == board.size()-1){
                for(int j = 0;j<board[0].size();j++){
                    if(board[i][j] == 'O')
                        q.push({i,j});
                }
            }else{
                if(board[i][0] == 'O')
                    q.push({i,0});
                if(board[i][board[0].size()-1] == 'O')
                    q.push({i,board[0].size()-1});
            }
        }
        
        while(!q.empty()){
            pair<int,int> cur = q.front();
            q.pop();
            int x = cur.first;
            int y = cur.second;
            board[x][y] = 'A';
            for(int i=0;i<4;i++){
                int a = x + row[i];
                int b = y + col[i];
                if(a<0 || b<0 || a>=board.size() || b>=board[0].size())
                    continue;
                if(board[a][b] == 'O')
                    q.push({a,b});
            }
        }
        for(int i=0;i<board.size();i++){
            for(int j=0;j<board[0].size();j++){
                if(board[i][j] == 'O')
                    board[i][j] = 'X';
                if(board[i][j] == 'A')
                    board[i][j] = 'O';
            }
        }
    }
};